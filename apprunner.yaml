# AWS App Runner Configuration for Flask Application
version: 1.0
runtime: python3
build:
  commands:
    pre-build:
      - echo "Installing dependencies..."
    build:
      - pip install --upgrade pip
      - pip install -r requirements.txt
    post-build:
      - echo "Build completed"

run:
  runtime-version: 3.9
  command: gunicorn app:app --bind=0.0.0.0:8000 --workers=2 --threads=4 --timeout=120
  network:
    port: 8000
    # env: HTTP
  
  # ตัวอย่างการใช้ Environment Variables โดยตรง
  # ถ้าต้องการใช้วิธีนี้ ให้ลบเครื่องหมาย # ด้านหน้าและกรอกค่าที่ต้องการ
  # env:
  #   - name: PYTHONUNBUFFERED
  #     value: "1"
  #   - name: FLASK_APP
  #     value: "app.py"
  #   - name: FLASK_ENV
  #     value: "production"
    # - name: DATABASE_URL
    #   value: "postgresql://username:password@your-db-host:5432/dbname"
    # - name: AWS_ACCESS_KEY_ID
    #   value: "your-access-key"
    # - name: AWS_SECRET_ACCESS_KEY
    #   value: "your-secret-key"
    # - name: AWS_S3_BUCKET
    #   value: "your-bucket-name"
    # - name: AWS_S3_REGION
    #   value: "ap-southeast-1"
    # - name: SECRET_KEY
    #   value: "your-flask-secret-key"
  
  # ตัวอย่างการใช้ AWS Secrets Manager
  # วิธีนี้ปลอดภัยกว่าการใช้ Environment Variables โดยตรง
  # ต้องสร้าง Secret ใน AWS Secrets Manager ก่อน
  # secrets:
  #   - name: DATABASE_URL
  #     value-from: "arn:aws:secretsmanager:REGION:ACCOUNT_ID:secret:SECRET_NAME:DATABASE_URL::"
  #   - name: AWS_ACCESS_KEY_ID
  #     value-from: "arn:aws:secretsmanager:REGION:ACCOUNT_ID:secret:SECRET_NAME:AWS_ACCESS_KEY_ID::"
  #   - name: AWS_SECRET_ACCESS_KEY
  #     value-from: "arn:aws:secretsmanager:REGION:ACCOUNT_ID:secret:SECRET_NAME:AWS_SECRET_ACCESS_KEY::"
  #   - name: AWS_S3_BUCKET
  #     value-from: "arn:aws:secretsmanager:REGION:ACCOUNT_ID:secret:SECRET_NAME:AWS_S3_BUCKET::"
  #   - name: AWS_S3_REGION
  #     value-from: "arn:aws:secretsmanager:REGION:ACCOUNT_ID:secret:SECRET_NAME:AWS_S3_REGION::"
  #   - name: SECRET_KEY
  #     value-from: "arn:aws:secretsmanager:REGION:ACCOUNT_ID:secret:SECRET_NAME:SECRET_KEY::"

# การตั้งค่า Health Check เพื่อตรวจสอบว่าแอปพลิเคชันทำงานปกติ
health-check:
  path: "/"
  interval: 10
  timeout: 5
  healthy-threshold: 3
  unhealthy-threshold: 5
