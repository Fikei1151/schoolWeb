services:
  # PostgreSQL Database
  db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      # เลือกพอร์ตที่ไม่ซ้ำกับที่ใช้อยู่ - ภายใน:ภายนอก
      - "5433:5432"
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
        reservations:
          memory: 256M

  # Flask Web Application
  web:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    depends_on:
      db:
        condition: service_healthy
    # พอร์ตไม่จำเป็นต้องเปิดเมื่อใช้ Nginx
    # ports:
    #   - "8001:8000"
    volumes:
      - ./uploads:/app/uploads
      - ./profile_pics:/app/profile_pics
      - ./static:/app/static
    env_file:
      - .env
    networks:
      - app-network
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
        reservations:
          memory: 256M

  # pgAdmin สำหรับจัดการฐานข้อมูล
  pgadmin:
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@schoolweb.com
      PGADMIN_DEFAULT_PASSWORD: schoolwebadmin
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - app-network
    depends_on:
      - db
    deploy:
      resources:
        limits:
          cpus: '0.30'
          memory: 256M

  # Nginx Server
  nginx:
    image: nginx:latest
    restart: always
    depends_on:
      - web
    ports:
      - "8080:80"   # เปลี่ยนจาก 80 เป็น 8080
      - "8443:443"  # เปลี่ยนจาก 443 เป็น 8443
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./static:/app/static
      - ./uploads:/app/uploads
      - ./certbot/conf:/etc/nginx/ssl
      - ./certbot/data:/var/www/certbot
    networks:
      - app-network
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 128M

  # Certbot สำหรับการจัดการ SSL certificates
  certbot:
    image: certbot/certbot:latest
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/data:/var/www/certbot
    command: certonly --webroot --webroot-path=/var/www/certbot --email fikree205m@gmail.com --agree-tos --no-eff-email --staging -d mukhtari.ac.th -d www.mukhtari.ac.th
    deploy:
      resources:
        limits:
          cpus: '0.20'
          memory: 128M

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
  uploads:
  pgadmin_data: 